basePath: /
definitions:
  dtos.CreateUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dtos.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entities.Product:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  entities.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  handlers.Error:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: rene.bizelli@gmail.com
    name: Ren√© Bizelli
  description: This is a sample server Petstore server.
  title: GO Expert API Example
  version: "1"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      summary: User login
      tags:
      - login
  /products/{page}/{limit}/{sort}:
    get:
      consumes:
      - application/json
      description: Get all products
      parameters:
      - description: page number
        in: path
        name: page
        required: true
        type: string
      - description: limit number
        in: path
        name: limit
        required: true
        type: string
      - description: sort by
        in: path
        name: sort
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Product'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all products
      tags:
      - products
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Create a new user
      tags:
      - users
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
